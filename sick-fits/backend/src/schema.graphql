# import * from './generated/prisma.graphql'

type SuccessMessage {
  message: String!
}

input _ItemCreateInput {
  title: String!
  description: String!
  image: String
  largeImage: String
  price: Int!
}

type Mutation {
  hi: String
  createDog(name: String!): Dog
  createItem(data: _ItemCreateInput): Item!
  updateItem(data: ItemUpdateInput, where: ItemWhereUniqueInput!): Item
  deleteItem(where: ItemWhereUniqueInput!): Item
  signup(name: String!, email: String!, password: String!): User
  signin(email: String!, password: String!): User
  signout: SuccessMessage
  requestReset(email: String!): SuccessMessage
  resetPassword(
    resetToken: String!
    password: String!
    confirmPassword: String!
  ): User!
  updatePermissions(userId: ID!, permissions: [Permission!]): User
  addToCart(id: ID!): CartItem
  removeFromCart(id: ID!): CartItem
}

# use the argument types from prisma.graphql
type Query {
  hi: String
  dogs: [Dog!]!
  items(
    where: ItemWhereInput
    orderBy: ItemOrderByInput
    skip: Int
    first: Int
  ): [Item]!
  item(where: ItemWhereUniqueInput!): Item
  itemsConnection(
    where: ItemWhereInput
    orderBy: ItemOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): ItemConnection!
  me: User
  users: [User!]!
}
type Dog {
  name: String!
}
